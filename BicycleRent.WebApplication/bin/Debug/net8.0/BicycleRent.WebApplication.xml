<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BicycleRent.WebApplication</name>
    </assembly>
    <members>
        <member name="T:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController">
            <summary>
            Класс-контроллер для сущности "Велосипед"
            </summary>
            <param name="repository">Репозиторий сущности "Велосипед"</param>
            <param name="mapper">Маппер</param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController.#ctor(BicycleRent.Domain.Interfaces.IRepositoryDb{BicycleRent.Domain.Entities.Bicycle,System.Int32},AutoMapper.IMapper)">
            <summary>
            Класс-контроллер для сущности "Велосипед"
            </summary>
            <param name="repository">Репозиторий сущности "Велосипед"</param>
            <param name="mapper">Маппер</param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController.Get">
            <summary>
            Получить все велосипеды
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController.Get(System.Int32)">
            <summary>
            Получить велосипед по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController.Post(BicycleRent.Servicies.Dto.BicycleDto)">
            <summary>
            Добавить велосипед
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController.Put(System.Int32,BicycleRent.Servicies.Dto.BicycleDto)">
            <summary>
            Обновить велосипед по id
            </summary>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleDbController.Delete(System.Int32)">
            <summary>
            Удалить велосипед по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController">
            <summary>
            Класс-контроллер для сущности "Арендатор велосипеда"
            </summary>
            <param name="repository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController.#ctor(BicycleRent.Domain.Interfaces.IRepositoryDb{BicycleRent.Domain.Entities.BicycleRenter,System.Int32},AutoMapper.IMapper)">
            <summary>
            Класс-контроллер для сущности "Арендатор велосипеда"
            </summary>
            <param name="repository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController.Get">
            <summary>
            Получить всех арендаторов велосипедов
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController.Get(System.Int32)">
            <summary>
            Получить арендатора велосипеда по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController.Post(BicycleRent.Servicies.Dto.BicycleRenterDto)">
            <summary>
            Добавить арендатора велосипеда
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController.Put(System.Int32,BicycleRent.Servicies.Dto.BicycleRenterDto)">
            <summary>
            Обновить арендатора велосипеда по id
            </summary>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleRenterDbController.Delete(System.Int32)">
            <summary>
            Удалить арендатора велосипеда по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController">
            <summary>
            Класс-контроллер для сущности "Тип велосипеда"
            </summary>
            <param name="repository">Репозиторий сущности "Тип велосипеда"</param>
            <param name="mapper">Маппер</param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController.#ctor(BicycleRent.Domain.Interfaces.IRepositoryDb{BicycleRent.Domain.Entities.BicycleType,System.Int32},AutoMapper.IMapper)">
            <summary>
            Класс-контроллер для сущности "Тип велосипеда"
            </summary>
            <param name="repository">Репозиторий сущности "Тип велосипеда"</param>
            <param name="mapper">Маппер</param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController.Get">
            <summary>
            Получить все типы велосипедов
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController.Get(System.Int32)">
            <summary>
            Получить тип велосипеда по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController.Post(BicycleRent.Servicies.Dto.BicycleTypeDto)">
            <summary>
            Добавить тип велосипеда
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController.Put(System.Int32,BicycleRent.Servicies.Dto.BicycleTypeDto)">
            <summary>
            Обновить тип велосипеда по id
            </summary>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.BicycleTypeDbController.Delete(System.Int32)">
            <summary>
            Удалить тип велосипеда по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController">
            <summary>
            Класс-контроллер для выполнения запросов
            </summary>
            <param name="repository">Репозиторий для запросов</param>
            <param name="mapper">Маппер</param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.#ctor(BicycleRent.Domain.Repositories.Database.JobRequestsRepositoryDb,AutoMapper.IMapper)">
            <summary>
            Класс-контроллер для выполнения запросов
            </summary>
            <param name="repository">Репозиторий для запросов</param>
            <param name="mapper">Маппер</param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.GetInfoSportBike">
            <summary>
            1) Вывести информацию обо всех спортивных велосипедах
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.GetInfoClientMountain">
            <summary>
            2) Вывести информацию обо всех клиентах, которые брали в аренду горные велосипеды, 
            упорядочить по ФИО.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.GetSumTimeRentForType">
            <summary>
            3) Вывести суммарное время аренды велосипедов каждого типа.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.GetClientsMaxRent">
            <summary>
            4) Вывести информацию о клиентах, бравших велосипеды на прокат больше всего раз.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.GetTopRentBikes">
            <summary>
            5) Вывести информацию о топ 5 наиболее часто арендуемых велосипедов.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.JobRequestsDbController.GetStatisticTimeRent">
            <summary>
            6) Вывести информацию о минимальном, максимальном и 
            среднем времени аренды велосипедов.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BicycleRent.WebApplication.Controllers.DataBase.RentDbController">
            <summary>
            Класс-контроллер для сущности "Аренда велосипеда"
            </summary>
            <param name="repository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.RentDbController.#ctor(BicycleRent.Domain.Interfaces.IRepositoryDb{BicycleRent.Domain.Entities.Rent,System.Int32},AutoMapper.IMapper)">
            <summary>
            Класс-контроллер для сущности "Аренда велосипеда"
            </summary>
            <param name="repository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.RentDbController.Get">
            <summary>
            Получить все арендны велосипедов
            </summary>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.RentDbController.Get(System.Int32)">
            <summary>
            Получить аренду велосипеда по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.RentDbController.Post(BicycleRent.Servicies.Dto.RentDto)">
            <summary>
            Добавить аренду велосипеда
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.RentDbController.Put(System.Int32,BicycleRent.Servicies.Dto.RentDto)">
            <summary>
            Обновить аренду велосипеда по id
            </summary>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BicycleRent.WebApplication.Controllers.DataBase.RentDbController.Delete(System.Int32)">
            <summary>
            Удалить аренду велосипеда по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
